node {
    stage("Git Clone"){
    git credentialsId: 'GIT_HUB_CREDENTIALS',url:'https://github.com/oguzzarci/forbootcamp.git'
    }

    stage("Kubernetes DEV Deployment"){
        
      def deployment = input(message:'Dev Deploy ?',ok:'ok',parameters:[booleanParam(defaultValue:true,description:'',name:'Yes')])
      
      if(deployment == true){
          
    script {
        env.DOCKER_BUILD_NUMBER=Jenkins.instance.getItem("dockerbuildjob").lastSuccessfulBuild.number
    }
    
    sh 'echo ${DOCKER_BUILD_NUMBER}'
    sh 'envsubst < ./KubernetesYamls/dev/deployment.yaml | kubectl apply -f -'
    sh 'kubectl apply -f ./KubernetesYamls/dev/service.yaml'
         
      } else {
          echo "Deploy Skipped"
      }
        
        
}
    stage("Kubernetes Test Deployment"){
    
    script {
        env.DOCKER_BUILD_NUMBER=Jenkins.instance.getItem("dockerbuildjob").lastSuccessfulBuild.number
    }
    
    sh 'echo ${DOCKER_BUILD_NUMBER}'
    sh 'envsubst < ./KubernetesYamls/test/deployment.yaml | kubectl apply -f -'
    sh 'kubectl apply -f ./KubernetesYamls/test/service.yaml'
}

    stage("Kubernetes PROD Deployment"){
    
    script {
        env.DOCKER_BUILD_NUMBER=Jenkins.instance.getItem("dockerbuildjob").lastSuccessfulBuild.number
    }
    
    sh 'echo ${DOCKER_BUILD_NUMBER}'
    sh 'envsubst < ./KubernetesYamls/prod/deployment.yaml | kubectl apply -f -'
    sh 'kubectl apply -f ./KubernetesYamls/prod/service.yaml'
}

}